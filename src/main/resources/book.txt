Mediator Pattern is one of the behavioral design pattern, so it deals with
the behaviors of objects. Mediator design pattern is used to provide a
centralized communication medium between different objects in a system.

Mediator design pattern is very helpful in an enterprise application where
multiple objects are interacting with each other. If the objects interact with
each other directly, the system components are tightly-coupled with each
other that makes maintainability cost higher and not flexible to extend
easily. Mediator pattern focuses on provide a mediator between objects for
communication and help in implementing lose-coupling between objects.
Air traffic controller is a great example of mediator pattern where the airport
control room works as a mediator for communication between different
flights. Mediator works as a router between objects and it can have it’s own
logic to provide way of communication.

The system objects that communicate each other are called Colleagues.
Usually we have an interface or abstract class that provides the contract for
communication and then we have concrete implementation of mediators.
For our example, we will try to implement a chat application where users
can do group chat. Every user will be identified by its name and they can
send and receive messages. The message sent by any user should be received
by all the other users in the group.
First of all we will create Mediator interface that will define the contract for
concrete mediators.

public interface ChatMediator {
 public void sendMessage(String msg, User user);
 void addUser(User user);
}

Users can send and receive messages, so we can have User interface or
abstract class. I am creating User as abstract class like below.

public abstract class User {
 protected ChatMediator mediator;
 protected String name;
 public User(ChatMediator med, String name){
 this.mediator=med;
 this.name=name;
 }
 public abstract void send(String msg);
 public abstract void receive(String msg);
}

Notice that User has a reference to the mediator object, it’s required for the
communication between different users.